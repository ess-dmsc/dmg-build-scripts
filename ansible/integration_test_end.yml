# Stop system under test

- hosts: itestgenerator02.dm.esss.dk
  tasks:
    - name: check if mesytec data generator finished
      async_status:
        jid: "{{ mesytec_generator.ansible_job_id }}"
      register: mesytec_generator_result
      until: mesytec_generator_result.finished
      retries: "{{ integration_test_num_retries }}"
      ignore_errors: yes

    - name: print mesytec data generator stdout
      debug:
        msg: "{{ mesytec_generator_result.stdout_lines }}"

    - name: print mesytec data generator stderr
      debug:
        msg: "{{ mesytec_generator_result.stderr_lines }}"

- hosts: itestgenerator03.dm.esss.dk
  tasks:
    - name: check if gdgem data generator finished
      async_status:
        jid: "{{ gdgem_generator.ansible_job_id }}"
      register: gdgem_generator_result
      until: gdgem_generator_result.finished
      retries: "{{ integration_test_num_retries }}"
      ignore_errors: yes

    - name: print gdgem data generator stdout
      debug:
        msg: "{{ gdgem_generator_result.stdout_lines }}"

    - name: print gdgem data generator stderr
      debug:
        msg: "{{ gdgem_generator_result.stderr_lines }}"

- hosts: nicos
  tasks:
    - name: send command to stop writing events to file
      shell: "{{ nicos_install_dir }}/stop_file_writer.sh"

- hosts: itesteventformationunit02.dm.esss.dk
  tasks:
    - name: check mesytec pipeline for correct counter values
      shell: "{{ event_formation_unit_install_dir }}/event-formation-unit/util/efushell/verifymetrics.py efu.mgmesytec.rx_packets:10392"
      register: mesytec_pipeline_counters_result
      ignore_errors: yes

    - name: print mesytec pipeline counter check stdout
      debug:
        msg: "{{ mesytec_pipeline_counters_result.stdout_lines }}"

    - name: print gdgem pipeline counter check stderr
      debug:
        msg: "{{ mesytec_pipeline_counters_result.stderr_lines }}"

- hosts: itesteventformationunit03.dm.esss.dk
  tasks:
    - name: check gdgem pipeline for correct counter values
      shell: "{{ event_formation_unit_install_dir }}/event-formation-unit/util/efushell/verifymetrics.py efu.nmx.rx_packets:9998"
      register: gdgem_pipeline_counters_result
      ignore_errors: yes

    - name: print gdgem pipline counter check stdout
      debug:
        msg: "{{ gdgem_pipeline_counters_result.stdout_lines }}"

    - name: print gdgem pipline counter check stderr
      debug:
        msg: "{{ gdgem_pipeline_counters_result.stderr_lines }}"

- hosts: efu
  tasks:
    - name: check if efu pipeline finished
      async_status:
        jid: "{{ efu_pipeline.ansible_job_id }}"
      register: efu_pipeline_result
      until: efu_pipeline_result.finished
      retries: "{{ integration_test_num_retries }}"
      ignore_errors: yes

    - name: print efu pipeline stdout
      debug:
        msg: "{{ efu_pipeline_result.stdout_lines }}"

    - name: print efu pipeline stderr
      debug:
        msg: "{{ efu_pipeline_result.stderr_lines }}"

- hosts: itestkafka01.dm.esss.dk
  tasks:
    # This command is not very robust, but pgrep did not work with the more
    # specific terms in the end of the long commands, such as filewriter_status.
    - name: stop kafka console consumers
      shell: "pkill -2 -u jenkins -f 'java'"
