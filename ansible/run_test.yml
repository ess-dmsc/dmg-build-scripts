- hosts: test-orchestrators
  tasks:
    - name: test result directory exists
      file:
        path: "{{ test_result_dir }}"
        state: directory

- hosts: area-detectors
  tasks:
    - name: iocsh lock file remove cmd
      shell: rm -f require.lock-*
      args:
        chdir: "~"

    - name: start ioc
      shell: "\
        /usr/local/bin/procServ {{ area_detector_procserv_port }} \
          /opt/epics/modules/environment/2.0.0/3.15.4/bin/centos7-x86_64/iocsh \
          ADPluginKafka_int_test.cmd"
      args:
        chdir: "~"
      async: 150
      poll: 0
      register: area_detector_ioc

- hosts: efus
  tasks:
    - name: start cspec pipeline
      shell: "\
        LD_LIBRARY_PATH=$LD_LIBRARY_PATH:../lib \
          ./efu2 -d mgcncs \
          -s 60 \
          -b {{ kafka_broker_address }} \
          -a {{ graylog_server_data_address }} \
          -g {{ graphite_server_data_address }}"
      args:
        chdir: ~/output/bin
      async: 70
      poll: 0
      register: efu_pipeline
      environment:
        LD_LIBRARY_PATH: "{{ ld_library_path }}"

    - name: load cspec calibration
      shell: ./mgloadcal.py ~/test-data/validruns_15
      args:
        chdir: ~/output/util/efushell

- hosts: epics-to-kafka-forwarders
  tasks:
    - name: start epics-to-kafka-forwarder
      shell: "\
        LD_LIBRARY_PATH=$LD_LIBRARY_PATH:./output/lib \
          ./forward-epics-to-kafka -v \
          --config-file config.json"
      args:
        chdir: ~
      async: 150
      poll: 0
      environment:
        LD_LIBRARY_PATH: "{{ ld_library_path }}"

- hosts: file-writers
  tasks:
    - name: set initial value of EPICS PV
      shell: "\
        pvput SQ:AMOR:DIMETIX:LASER ON; \
        sleep 1; \
        pvput SQ:AMOR:DIMETIX:SimVal 3; \
        sleep 1"

    - name: output NeXus file is absent
      file:
        path: "~/file-writer/{{ nexus_file_name }}"
        state: absent

    - name: start file writer
      shell: "\
        LD_LIBRARY_PATH=$LD_LIBRARY_PATH:./libs \
          ./kafka-to-nexus \
          --broker-command //{{ kafka_broker_address }} \
          --graylog-logger-address {{ graylog_server_data_full_address }}"
      args:
        chdir: ~/file-writer
      async: 150
      poll: 0
      environment:
        LD_LIBRARY_PATH: "{{ ld_library_path }}"

- hosts: test-orchestrators
  tasks:
    - name: send command to start writing events to file
      shell: "./send-start-cmd.py itest03.dm.esss.dk {{ nexus_file_name }}"
      args:
        chdir: ~

- hosts: data-generators
  tasks:
    - name: start data generation
      shell: "\
        LD_LIBRARY_PATH=$LD_LIBRARY_PATH:../lib \
          ./mgcncsgenfile \
          -f ../../test-data/cncs_10_13.bin \
          -i 192.168.12.22"
      args:
        chdir: ~/output/bin
      environment:
        LD_LIBRARY_PATH: "{{ ld_library_path }}"

- hosts: file-writers
  tasks:
    - name: change value of EPICS PV
      shell: "\
        pvput SQ:AMOR:DIMETIX:SimVal 0; \
        sleep 1; \
        pvput SQ:AMOR:DIMETIX:SimVal 1; \
        sleep 1; \
        pvput SQ:AMOR:DIMETIX:SimVal 2; \
        sleep 1"

- hosts: file-writers
  tasks:
    - name: wait for cspec pipeline to finish running
      pause:
        seconds: 30

- hosts: test-orchestrators
  tasks:
    - name: send stop command to file writer
      shell: ./send-stop-cmd.py "itest03.dm.esss.dk"
      args:
        chdir: ~

- hosts: epics-to-kafka-forwarders
  tasks:
    - name: kill epics-to-kafka-forwarder
      shell: pkill -9 forward-epics

- hosts: efus
  tasks:
    - name: check cspec pipeline result
      async_status:
        jid: "{{ efu_pipeline.ansible_job_id }}"
      register: efu_pipeline_result
      until: efu_pipeline_result.finished
      retries: 30
      ignore_errors: yes

    - name: set playbook_result flag
      set_fact: playbook_result="success"

    - name: set playbook_result flag if task failed
      set_fact: playbook_result="failure"
      when: efu_pipeline_result.rc!=0

    - name: print task result
      debug:
        msg: "{{ efu_pipeline_result.stdout_lines }}"

- hosts: file-writers
  tasks:
    - name: check if NeXus file was generated
      shell: "/opt/dm_group/usr/bin/h5ls {{ nexus_file_name }}"
      args:
        chdir: ~/file-writer
      environment:
        LD_LIBRARY_PATH: "{{ ld_library_path }}"

    - name: copy output NeXus file
      fetch:
        src: "~/file-writer/{{ nexus_file_name }}"
        dest: "{{ test_result_dir }}/"
        flat: yes

- hosts: test-orchestrators
  tasks:
    - name: check if NeXus file contains expected data
      shell: "./test-output-file.py {{ test_result_dir }}/{{ nexus_file_name }}"
      args:
        chdir: ~

- hosts: area-detectors
  tasks:
    - name: stop ioc
      shell: pkill -f ADPluginKafka

- hosts: efus
  tasks:
    - name: check playbook result
      fail:
        msg: playbook failed
      when: playbook_result=="failure"
