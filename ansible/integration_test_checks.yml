# Check integration test results

# Make sure test result directory exists and is empty
- hosts: test-orchestrator
  tasks:
    - name: test result is absent
      file:
        path: "{{ integration_test_result_dir }}"
        state: absent

    - name: test result dir exists
      file:
        path: "{{ integration_test_result_dir }}"
        state: directory

- hosts: all
  tasks:
    - name: save log to file
      become: yes
      shell: "journalctl --no-pager --since='{{ integration_test_start_time.stdout }}' > /home/jenkins/{{ ansible_fqdn }}.log"

    - name: copy log file
      fetch:
        src: "/home/jenkins/{{ ansible_fqdn }}.log"
        dest: "{{ integration_test_result_dir }}/"
        flat: yes

    - name: log file is absent
      become: yes
      file:
        path: "~/{{ ansible_fqdn }}.log"
        state: absent

- hosts: nicos
  tasks:
    - name: copy nicos log file
      fetch:
        src: "/opt/nicos-data/log/nicos/current"
        dest: "{{ integration_test_result_dir }}/nicos.log"
        flat: yes

- hosts: itestkafka01.dm.esss.dk
  tasks:
    - name: copy kafka console consumer file writer command files
      fetch:
        src: "~/kafka_filewriter_command.log"
        dest: "{{ integration_test_result_dir }}/"
        flat: yes

    - name: copy kafka console consumer file writer status files
      fetch:
        src: "~/kafka_filewriter_status.log"
        dest: "{{ integration_test_result_dir }}/"
        flat: yes

- hosts: kafka-to-nexus
  any_errors_fatal: true
  tasks:
    - name: copy file from kafka-to-nexus host
      fetch:
        src: "{{ kafka_to_nexus_data_dir }}/{{ integration_test_nexus_file_name }}"
        dest: "{{ integration_test_result_dir }}/"
        flat: yes

- hosts: test-orchestrator
  any_errors_fatal: true
  tasks:
    - name: check NeXus file contents
      shell: "{{ hdf5_install_dir }}/bin/h5ls -r {{ integration_test_result_dir }}/{{ integration_test_nexus_file_name }}"
      args:
        chdir: "{{ hdf5_install_dir }}"
      register: nexus_file_h5ls_result
      ignore_errors: yes
      environment:
        LD_LIBRARY_PATH: "{{ ld_library_path }}:../lib"

    - name: print NeXus file h5ls stdout
      debug:
        msg: "{{ nexus_file_h5ls_result.stdout_lines }}"

    - name: print NeXus file h5ls stderr
      debug:
        msg: "{{ nexus_file_h5ls_result.stderr_lines }}"

    - name: check if NeXus file contains expected data
      shell: "{{ test_orchestrator_python_bin }} {{ test_orchestrator_script_dir }}/test-output-file.py {{ integration_test_result_dir }}/{{ integration_test_nexus_file_name }}"

    - name: fail test if NeXus file h5ls failed
      fail:
        msg: playbook failed
        when: nexus_file_h5ls_result.rc!=0

- hosts: itesteventformationunit01.dm.esss.dk
  any_errors_fatal: true
  tasks:
    - name: fail test if pipeline failed
      fail:
        msg: playbook failed
      when: cspec_pipeline_result.rc!=0

- hosts: itesteventformationunit02.dm.esss.dk
  any_errors_fatal: true
  tasks:
    - name: fail test if pipeline failed
      fail:
        msg: playbook failed
      when: mesytec_pipeline_result.rc!=0

    - name: fail test if pipeline counter check failed
      fail:
        msg: playbook failed
      when: mesytec_pipeline_counters_result.rc!=0

- hosts: itesteventformationunit03.dm.esss.dk
  any_errors_fatal: true
  tasks:
    - name: fail test if pipeline failed
      fail:
        msg: playbook failed
      when: gdgem_pipeline_result.rc!=0

    - name: fail test if pipeline counter check failed
      fail:
        msg: playbook failed
      when: gdgem_pipeline_counters_result.rc!=0
