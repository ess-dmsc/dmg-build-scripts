# Prepare integration test environment and start system under test

- hosts: test-orchestrators
  tasks:
    - name: test result directory exists
      file:
        path: "{{ test_result_dir }}"
        state: directory

- hosts: efus
  tasks:
    - name: start cspec pipeline
      shell: "\
        LD_LIBRARY_PATH=$LD_LIBRARY_PATH:../lib \
          ./efu2 -d mgcncs2 \
          -s 60 \
          -b {{ kafka_broker_address }} \
          -a {{ graylog_server_data_address }} \
          -g {{ graphite_server_data_address }}"
      args:
        chdir: "~/output/bin"
      async: "{{ max_async_timeout }}"
      poll: 0
      register: cspec_pipeline
      environment:
        LD_LIBRARY_PATH: "{{ ld_library_path }}"

    - name: wait for cspec pipeline initialisation
      pause:
        seconds: 5

    - name: load cspec calibration
      shell: ./mgloadcal.py ~/test-data/validruns_15
      args:
        chdir: "~/output/util/efushell"

- hosts: epics-to-kafka-forwarders
  tasks:
    - name: start epics-to-kafka-forwarder
      shell: "\
        ./bin/forward-epics-to-kafka -v \
          --config-file config.json"
      args:
        chdir: "~/forward-epics-to-kafka"
      async: "{{ max_async_timeout }}"
      poll: 0
      register: epics_forwarder

- hosts: kafka-to-nexus
  tasks:
    - name: output NeXus file is absent
      file:
        path: "~/kafka-to-nexus/{{ nexus_file_name }}"
        state: absent

    - name: set initial value of EPICS PV
      shell: "\
        pvput testCounter 0; \
        sleep 1"

    - name: start file writer
      shell: "\
        ./bin/kafka-to-nexus \
          --command-uri //{{ kafka_broker_address }} \
          --graylog-logger-address {{ graylog_server_data_full_address }}"
      args:
        chdir: "~/kafka-to-nexus"
      async: "{{ max_async_timeout }}"
      poll: 0
      register: kafka_to_nexus
